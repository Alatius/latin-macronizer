These instructions are for Linux (specifically of the Debian flavour). Please adapt
to your system, if necessary.

Supposedly (since you are reading this) you have already downloaded the source code
for the macronizer and are standing in the directory called "latin-macronizer".

Install prerequisite packages:

  sudo apt-get install build-essential flex python-psycopg2

Download the specially adapted version of Morpheus, and compile it:

  git clone https://github.com/Alatius/morpheus.git
  cd morpheus/src
  make
  make install
  cd ..
  ./update.sh
  ./update.sh
  echo "salve" | MORPHLIB=stemlib bin/cruncher -L
  cd ..

(Yes, run the update script twice. And check that it did in fact parse "salve" correctly!)

And the patched version of the Latin Dependency Treebank:

  git clone https://github.com/Alatius/treebank_data.git

Now download and compile RFTagger:

  wget -qO- http://www.cis.uni-muenchen.de/~schmid/tools/RFTagger/data/RFTagger.tar.gz | tar xvz
  cd RFTagger/src
  make
  sudo make install
  cd ../..

Convert the corpus and train RFTagger:

  ./train-rftagger.sh

The macronizer script stores the Morpheus analyses in a PostgreSQL database.
So you will have to install a database server and create a database.
The following works for me; your mileage may vary. Change theusername and
thepassword to whatever you want.

  sudo apt-get install postgresql
  sudo -u postgres psql
  postgres=# create user theusername password 'thepassword';
  postgres=# create database macronizer encoding 'UTF8' owner theusername;
  postgres=# \q

Now, edit the main script macronizer.py and set the constants in the beginning to the correct values:

  MORPHEUSDIR = 'morpheus/'
  RFTAGGERDIR = '/usr/local/bin/'
  DBNAME = 'macronizer'
  DBUSER = 'theusername'
  DBPASSWORD = 'thepassword'
  DBHOST = 'localhost'

Similarly, edit the front-end macronize.py and update the constant to point to the right directory:

  MACRONIZERLIB = '/path/to/the/latin-macronizer/'

Finally, initialize the macronizer:

  python macronize.py --initialize

You can now test it with the following command

  python macronize.py --test

Good luck! In case of problems, contact me at johan.winge@gmail.com and I will do my best to assist you.

If all is well so far, you may now also consider running the web script
locally. The right way to set up Apache may vary on different systems,
and you have many options to configure in the way you prefer, so this
is just a quick and dirty guide to get something working. Adapt to your
own needs!

  sudo apt-get install apache2

  sudo a2enmod cgi

  sudo nano /etc/apache2/apache2.conf

Edit the following part to look like this:

   <Directory /var/www/>
	Options Indexes FollowSymLinks ExecCGI
	AddHandler cgi-script .py
	AllowOverride None
	Require all granted
  </Directory>

Then save the configuration, and restart:

  sudo service apache2 restart

Make a link to the script, and make it executable:

  sudo ln -s /complete/path/to/macronize.py /var/www/html/macronize.py
  sudo chmod 755 /var/www/html/macronize.py

Hopefully, you can now find the macronizer working at http://localhost/macronize.py

